name: Deploy to Development

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  ENVIRONMENT: dev

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Build and push backend image
      run: |
        cd backend
        docker build -t gcr.io/$PROJECT_ID/collaborative-app-backend:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/collaborative-app-backend:${{ github.sha }}
    
    - name: Build and push frontend image
      run: |
        cd frontend
        docker build -t gcr.io/$PROJECT_ID/collaborative-app-frontend:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/collaborative-app-frontend:${{ github.sha }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    
    - name: Terraform Init
      run: |
        cd infrastructure
        terraform init
    
    - name: Terraform Plan
      run: |
        cd infrastructure
        terraform plan -var="project_id=$PROJECT_ID" -var="environment=$ENVIRONMENT" -out=tfplan
      env:
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Terraform Apply
      run: |
        cd infrastructure
        terraform apply tfplan
      env:
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy collaborative-app-backend-$ENVIRONMENT \
          --image gcr.io/$PROJECT_ID/collaborative-app-backend:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID,ENVIRONMENT=$ENVIRONMENT"
        
        gcloud run deploy collaborative-app-frontend-$ENVIRONMENT \
          --image gcr.io/$PROJECT_ID/collaborative-app-frontend:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="NEXT_PUBLIC_API_URL=$(gcloud run services describe collaborative-app-backend-$ENVIRONMENT --region=$REGION --format='value(status.url)'),ENVIRONMENT=$ENVIRONMENT"
    
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ Deployment to development environment completed!
          
          **Backend URL:** $(gcloud run services describe collaborative-app-backend-${{ env.ENVIRONMENT }} --region=${{ env.REGION }} --format='value(status.url)')
          **Frontend URL:** $(gcloud run services describe collaborative-app-frontend-${{ env.ENVIRONMENT }} --region=${{ env.REGION }} --format='value(status.url)')`
          }) 